#!/bin/sh

# Set up the application for the first time after cloning, or set it back to the
# initial unused state.

set -e

# Enable the running of this script from any subdirectory without moving to root
cd "$(dirname "$0")/../.."

if [ -d vendor/bundle ]; then
  echo "==> Cleaning installed Ruby dependencies..."
  git clean -x --force -- vendor/bundle
fi

echo "==> Bootstrapping..."
script/no-docker/bootstrap

echo "==> Compiling assets..."
yarn build
yarn build:css

echo "==> Dropping database..."
set +e
bundle exec rails db:drop
DB_DROP_RESULT=$?
set -e

if [ -z "$CI" ] && [ "$DB_DROP_RESULT" != 0 ]; then
  printf "\\nDatabase drop failed. Continue anyway? [y/N] "
  read -r REPLY

  case $REPLY in
    y | Y)
      ;;
    *)
      exit 1
      ;;
  esac
fi

echo "==> Creating database..."
bundle exec rails db:setup

echo "==> Dropping test database..."
set +e
RAILS_ENV="test" bundle exec rails db:drop
DB_DROP_RESULT=$?
set -e

if [ -z "$CI" ] && [ "$DB_DROP_RESULT" != 0 ]; then
  printf "\\nDatabase drop failed. Continue anyway? [y/N] "
  read -r REPLY

  case $REPLY in
    y | Y)
      ;;
    *)
      exit 1
      ;;
  esac
fi

echo "==> Creating test database..."
RAILS_ENV="test" bundle exec rails db:setup
